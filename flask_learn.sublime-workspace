{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"url",
				"url_for"
			],
			[
				"u",
				"username"
			],
			[
				"val",
				"validator"
			],
			[
				"us",
				"username"
			],
			[
				"Login",
				"LoginForm"
			],
			[
				"r",
				"route"
			],
			[
				"wtf",
				"WTForms"
			],
			[
				"bo",
				"bootstrap"
			],
			[
				"user",
				"user"
			],
			[
				"pro",
				"profile"
			],
			[
				"re",
				"redirect"
			],
			[
				"gen",
				"gen_html"
			],
			[
				"i",
				"id	Attr"
			],
			[
				"back",
				"background-color"
			],
			[
				"padding-",
				"padding-left"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"bor",
				"border-spacing"
			],
			[
				"bord",
				"border-bottom"
			],
			[
				"padd",
				"padding"
			],
			[
				"bac",
				"background-color"
			],
			[
				"mar",
				"margin-bottom"
			],
			[
				"wid",
				"width"
			],
			[
				"in",
				"input"
			]
		]
	},
	"buffers":
	[
		{
			"file": "FlaskLearn.py",
			"settings":
			{
				"buffer_size": 4907,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config,py",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/index.html",
			"settings":
			{
				"buffer_size": 328,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/login.html",
			"settings":
			{
				"buffer_size": 1481,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/form_test.html",
			"settings":
			{
				"buffer_size": 599,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/user.html",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/templates/bootstrap/google.html",
			"settings":
			{
				"buffer_size": 518,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "z#!/usr/bin/env python\n# coding=utf8\n\n__version__ = '3.0.3.1'\n\nimport re\n\nfrom flask import Blueprint, current_app, url_for\n\ntry:\n    from wtforms.fields import HiddenField\nexcept ImportError:\n    def is_hidden_field_filter(field):\n        raise RuntimeError('WTForms is not installed.')\nelse:\n    def is_hidden_field_filter(field):\n        return isinstance(field, HiddenField)\n\n\nclass CDN(object):\n    \"\"\"Base class for CDN objects.\"\"\"\n    def get_resource_url(self, filename):\n        \"\"\"Return resource url for filename.\"\"\"\n        raise NotImplementedError\n\n\nclass StaticCDN(object):\n    \"\"\"A CDN that serves content from the local application.\n\n    :param static_endpoint: Endpoint to use.\n    :param rev: If ``True``, honor ``BOOTSTRAP_QUERYSTRING_REVVING``.\n    \"\"\"\n    def __init__(self, static_endpoint='static', rev=False):\n        self.static_endpoint = static_endpoint\n        self.rev = rev\n\n    def get_resource_url(self, filename):\n        extra_args = {}\n\n        if self.rev and current_app.config['BOOTSTRAP_QUERYSTRING_REVVING']:\n            extra_args['bootstrap'] = __version__\n\n        return url_for(self.static_endpoint, filename=filename, **extra_args)\n\n\nclass WebCDN(object):\n    \"\"\"Serves files from the Web.\n\n    :param baseurl: The baseurl. Filenames are simply appended to this URL.\n    \"\"\"\n    def __init__(self, baseurl):\n        self.baseurl = baseurl\n\n    def get_resource_url(self, filename):\n        return self.baseurl + filename\n\n\nclass ConditionalCDN(object):\n    \"\"\"Serves files from one CDN or another, depending on whether a\n    configuration value is set.\n\n    :param confvar: Configuration variable to use.\n    :param primary: CDN to use if the configuration variable is ``True``.\n    :param fallback: CDN to use otherwise.\n    \"\"\"\n    def __init__(self, confvar, primary, fallback):\n        self.confvar = confvar\n        self.primary = primary\n        self.fallback = fallback\n\n    def get_resource_url(self, filename):\n        if current_app.config[self.confvar]:\n            return self.primary.get_resource_url(filename)\n        return self.fallback.get_resource_url(filename)\n\n\ndef bootstrap_find_resource(filename, cdn, use_minified=None, local=True):\n    \"\"\"Resource finding function, also available in templates.\n\n    Tries to find a resource, will force SSL depending on\n    ``BOOTSTRAP_CDN_FORCE_SSL`` settings.\n\n    :param filename: File to find a URL for.\n    :param cdn: Name of the CDN to use.\n    :param use_minified': If set to ``True``/``False``, use/don't use\n                          minified. If ``None``, honors\n                          ``BOOTSTRAP_USE_MINIFIED``.\n    :param local: If ``True``, uses the ``local``-CDN when\n                  ``BOOTSTRAP_SERVE_LOCAL`` is enabled. If ``False``, uses\n                  the ``static``-CDN instead.\n    :return: A URL.\n    \"\"\"\n    config = current_app.config\n\n    if None == use_minified:\n        use_minified = config['BOOTSTRAP_USE_MINIFIED']\n\n    if use_minified:\n        filename = '%s.min.%s' % tuple(filename.rsplit('.', 1))\n\n    cdns = current_app.extensions['bootstrap']['cdns']\n    resource_url = cdns[cdn].get_resource_url(filename)\n\n    if resource_url.startswith('//') and config['BOOTSTRAP_CDN_FORCE_SSL']:\n        resource_url = 'https:%s' % resource_url\n\n    return resource_url\n\n\nclass Bootstrap(object):\n    def __init__(self, app=None):\n        if app is not None:\n            self.init_app(app)\n\n    def init_app(self, app):\n        BOOTSTRAP_VERSION = re.sub(r'^(\\d+\\.\\d+\\.\\d+).*', r'\\1', __version__)\n        JQUERY_VERSION = '2.0.3'\n        HTML5SHIV_VERSION = '3.7'\n        RESPONDJS_VERSION = '1.3.0'\n\n        app.config.setdefault('BOOTSTRAP_USE_MINIFIED', True)\n        app.config.setdefault('BOOTSTRAP_CDN_FORCE_SSL', False)\n\n        app.config.setdefault('BOOTSTRAP_QUERYSTRING_REVVING', True)\n        app.config.setdefault('BOOTSTRAP_SERVE_LOCAL', False)\n\n        blueprint = Blueprint(\n            'bootstrap',\n            __name__,\n            template_folder='templates',\n            static_folder='static',\n            static_url_path=app.static_url_path + '/bootstrap')\n\n        app.register_blueprint(blueprint)\n\n        app.jinja_env.globals['bootstrap_is_hidden_field'] =\\\n            is_hidden_field_filter\n        app.jinja_env.globals['bootstrap_find_resource'] =\\\n            bootstrap_find_resource\n\n        if not hasattr(app, 'extensions'):\n            app.extensions = {}\n\n        local = StaticCDN('bootstrap.static', rev=True)\n        static = StaticCDN()\n\n        def lwrap(cdn, primary=static):\n            return ConditionalCDN('BOOTSTRAP_SERVE_LOCAL', primary, cdn)\n\n        bootstrap = lwrap(\n            WebCDN('//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/%s/'\n                   % BOOTSTRAP_VERSION),\n            local)\n\n        jquery = lwrap(\n            WebCDN('//cdnjs.cloudflare.com/ajax/libs/jquery/%s/'\n                   % JQUERY_VERSION),\n            local)\n\n        html5shiv = lwrap(\n            WebCDN('//cdnjs.cloudflare.com/ajax/libs/html5shiv/%s/'\n                   % HTML5SHIV_VERSION))\n\n        respondjs = lwrap(\n            WebCDN('//cdnjs.cloudflare.com/ajax/libs/respond.js/%s/'\n                   % RESPONDJS_VERSION))\n\n        app.extensions['bootstrap'] = {\n            'cdns': {\n                'local': local,\n                'static': static,\n                'bootstrap': bootstrap,\n                'jquery': jquery,\n                'html5shiv': html5shiv,\n                'respond.js': respondjs,\n            },\n        }\n",
			"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/__init__.py",
			"file_size": 5526,
			"file_write_time": 130711407300000000,
			"settings":
			{
				"buffer_size": 5527,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/templates/bootstrap/base.html",
			"settings":
			{
				"buffer_size": 1045,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 352.0,
		"selected_items":
		[
		],
		"width": 352.0
	},
	"console":
	{
		"height": 118.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/acetakwas/web_dev/flask",
		"/home/acetakwas/web_dev/flask/flask_venv",
		"/home/acetakwas/web_dev/flask/flask_venv/lib",
		"/home/acetakwas/web_dev/flask/flask_venv/practice",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/with_templates",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/with_templates/templates",
		"/home/acetakwas/web_dev/flask/learn_flask_dev"
	],
	"file_history":
	[
		"/home/acetakwas/web_dev/flask/flask_venv/practice/index.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/user.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/login.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/index.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/form_test.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/404.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/templates/base.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/FlaskLearn.py",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/user.html",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/work_with_templates/index.html",
		"/home/acetakwas/web_dev/flask/flask_venv/proj/TestApp.py",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/no_template/FlaskLearn.py",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/Hello.py",
		"/home/acetakwas/web_dev/flask/flask_venv/practice/FlaskLearn.py",
		"/home/acetakwas/web_dev/flask/git_code/flask-pastebin/README",
		"/home/acetakwas/web_dev/flask/git_code/flaskbb/requirements.txt",
		"/home/acetakwas/web_dev/flask/git_code/PyPaste/fabfile.py",
		"/home/acetakwas/web_dev/flask/git_code/PyPaste/README.md",
		"/home/acetakwas/web_dev/flask/git_code/flask-pastebin/manage.py",
		"/home/acetakwas/web_dev/flask/git_code/flask-pastebin/pastebin.py",
		"/home/acetakwas/web_dev/flask/flask_venv/gen_res/bootstrap-3.2.0-dist/css/bootstrap-theme.min.css",
		"/home/acetakwas/web_dev/flask/flask_venv/gen_res/bootstrap-3.2.0-dist/css/bootstrap.css",
		"/home/acetakwas/web_dev/flask/flask_venv/bootstrap-3.2.0-dist/js/bootstrap.min.js",
		"/home/acetakwas/web_dev/flask/git_code/flask-pastebin/requirements.txt",
		"/home/acetakwas/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/acetakwas/java_dev/NIIT_2/FindAndRecord.java",
		"/home/acetakwas/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/acetakwas/.config/sublime-text-3/Packages/User/Java.sublime-settings",
		"/home/acetakwas/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/acetakwas/web_dev/page.html",
		"/home/acetakwas/web_dev/projects/bethelWC/index.htm",
		"/home/acetakwas/.pythonrc",
		"/home/acetakwas/.pystartup",
		"/home/acetakwas/c_sharp_dev/workspace/QuickMatch/QuickMatch/QMCard.cs",
		"/home/acetakwas/c_sharp_dev/workspace/oblivion_theme_file.txt",
		"/home/acetakwas/Desktop/CF Auto Root.txt",
		"/home/acetakwas/web_dev/practice/BootstrapLearn/page.htm",
		"/home/acetakwas/naijaninjakoder/new/res/style.css",
		"/home/acetakwas/web_dev/practice/BootstrapLearn/css/main.css",
		"/home/acetakwas/web_dev/practice/BootstrapLearn/index.htm",
		"/home/acetakwas/naijaninjakoder/jhubsp0t/assets/css/extra.css",
		"/home/acetakwas/naijaninjakoder/jhubsp0t/assets/css/main.css",
		"/home/acetakwas/naijaninjakoder/new/jHubSpot.html",
		"/home/acetakwas/naijaninjakoder/jhubsp0t/res/css/main.css",
		"/home/acetakwas/naijaninjakoder/jhubsp0t/profile.htm",
		"/home/acetakwas/naijaninjakoder/jhubsp0t/index.html"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"error-code",
			"error code",
			"\"feeds\"",
			">\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"response-status-code",
			"response-status",
			"feedWrappers"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "FlaskLearn.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4907,
						"regions":
						{
						},
						"selection":
						[
							[
								3832,
								3832
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1649.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "config,py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 328,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/login.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1481,
						"regions":
						{
						},
						"selection":
						[
							[
								1229,
								1229
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "templates/form_test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 599,
						"regions":
						{
						},
						"selection":
						[
							[
								382,
								382
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "templates/user.html",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/templates/bootstrap/google.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 518,
						"regions":
						{
						},
						"selection":
						[
							[
								518,
								518
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 40.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5527,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/acetakwas/web_dev/flask/flask_venv/lib/python2.7/site-packages/flask_bootstrap/templates/bootstrap/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1045,
						"regions":
						{
						},
						"selection":
						[
							[
								566,
								566
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.779205607477,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 94.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "flask_learn.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
